In real-world traffic small errors, like an unnecessary brake from individual drivers can propagate through traffic and lead to interruptions and traffic jams far away from the initial disturbance. Studying these phenomena could be especially important with the emergence of self-driving cars. The cars need to be tuned so they don't cause unnecessary traffic congestion.

We want to study how small irregularites, such as braking or acceleration of a few drivers, in traffic flow propagate through traffic. We start from a single lane situation with agent-based modelling of individual drivers and periodic boundary condidtions. Each agent is represented by a finite-state machine with threes states, braking, acceleration and driving at constant speed. The state transitions depend on the speed and positions of the nearest neighbours, primarily the one ahead. Depending on the time available, more complexity will be added to the model.  

main features to be implemented:
Graphics - matplotlib/pygame,
Track - linked list, keep track of length, be able to give info to car.
Car - properties: speed, positions, (lane?), state (braking, acceleration, constant), (size?). Functions: update(), query track.
Braking - instantly
Crashes, not in the beginning
Main controller

